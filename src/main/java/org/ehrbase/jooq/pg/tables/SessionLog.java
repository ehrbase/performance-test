/*
 * Copyright (c) 2022 vitasystems GmbH and Hannover Medical School.
 *
 * This file is part of project EHRbase
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.ehrbase.jooq.pg.tables;

import java.sql.Timestamp;
import java.util.UUID;
import org.ehrbase.jooq.pg.Keys;
import org.ehrbase.jooq.pg.tables.records.SessionLogRecord;
import org.ehrbase.jooq.pg.Ehr;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row7;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;

/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class SessionLog extends TableImpl<SessionLogRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>ehr.session_log</code>
     */
    public static final SessionLog SESSION_LOG = new SessionLog();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SessionLogRecord> getRecordType() {
        return SessionLogRecord.class;
    }

    /**
     * The column <code>ehr.session_log.id</code>.
     */
    public final TableField<SessionLogRecord, UUID> ID = createField(
            DSL.name("id"),
            SQLDataType.UUID.nullable(false).defaultValue(DSL.field("uuid_generate_v4()", SQLDataType.UUID)),
            this,
            "");

    /**
     * The column <code>ehr.session_log.subject_id</code>.
     */
    public final TableField<SessionLogRecord, String> SUBJECT_ID =
            createField(DSL.name("subject_id"), SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>ehr.session_log.node_id</code>.
     */
    public final TableField<SessionLogRecord, String> NODE_ID =
            createField(DSL.name("node_id"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>ehr.session_log.session_id</code>.
     */
    public final TableField<SessionLogRecord, String> SESSION_ID =
            createField(DSL.name("session_id"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>ehr.session_log.session_name</code>.
     */
    public final TableField<SessionLogRecord, String> SESSION_NAME =
            createField(DSL.name("session_name"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>ehr.session_log.session_time</code>.
     */
    public final TableField<SessionLogRecord, Timestamp> SESSION_TIME =
            createField(DSL.name("session_time"), SQLDataType.TIMESTAMP(6), this, "");

    /**
     * The column <code>ehr.session_log.ip_address</code>.
     */
    public final TableField<SessionLogRecord, String> IP_ADDRESS =
            createField(DSL.name("ip_address"), SQLDataType.CLOB, this, "");

    private SessionLog(Name alias, Table<SessionLogRecord> aliased) {
        this(alias, aliased, null);
    }

    private SessionLog(Name alias, Table<SessionLogRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>ehr.session_log</code> table reference
     */
    public SessionLog(String alias) {
        this(DSL.name(alias), SESSION_LOG);
    }

    /**
     * Create an aliased <code>ehr.session_log</code> table reference
     */
    public SessionLog(Name alias) {
        this(alias, SESSION_LOG);
    }

    /**
     * Create a <code>ehr.session_log</code> table reference
     */
    public SessionLog() {
        this(DSL.name("session_log"), null);
    }

    public <O extends Record> SessionLog(Table<O> child, ForeignKey<O, SessionLogRecord> key) {
        super(child, key, SESSION_LOG);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Ehr.EHR;
    }

    @Override
    public UniqueKey<SessionLogRecord> getPrimaryKey() {
        return Keys.SESSION_LOG_PKEY;
    }

    @Override
    public SessionLog as(String alias) {
        return new SessionLog(DSL.name(alias), this);
    }

    @Override
    public SessionLog as(Name alias) {
        return new SessionLog(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SessionLog rename(String name) {
        return new SessionLog(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SessionLog rename(Name name) {
        return new SessionLog(name, null);
    }

    // -------------------------------------------------------------------------
    // Row7 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row7<UUID, String, String, String, String, Timestamp, String> fieldsRow() {
        return (Row7) super.fieldsRow();
    }
}
